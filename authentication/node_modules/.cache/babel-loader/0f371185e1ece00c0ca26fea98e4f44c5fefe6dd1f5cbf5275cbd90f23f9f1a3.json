{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Login Form\\\\authentication\\\\src\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword({\n  onLogin\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [msgClass, setMsgClass] = useState(\"\");\n  const handleReset = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:5000/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      setMsg(data.message);\n      setMsgClass(data.success ? \"text-success\" : \"text-danger\");\n      if (data.success) {\n        setTimeout(() => {\n          setEmail(\"\");\n          setNewPassword(\"\");\n          onLogin(); // redirect to login\n        }, 1500);\n      }\n    } catch (err) {\n      setMsg(\"Server error\");\n      setMsgClass(\"text-danger\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleReset,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center mb-3\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      type: \"email\",\n      placeholder: \"Enter registered email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-3\",\n      type: \"password\",\n      placeholder: \"New password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning w-100\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-center mt-2 ${msgClass}`,\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"X+72WxCyyPWrfnB+7G3gHDnFhp0=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPassword","onLogin","_s","email","setEmail","newPassword","setNewPassword","msg","setMsg","msgClass","setMsgClass","handleReset","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","message","success","setTimeout","err","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Login Form/authentication/src/Reset.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ResetPassword({ onLogin }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgClass, setMsgClass] = useState(\"\");\r\n\r\n  const handleReset = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/reset-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, newPassword }),\r\n      });\r\n      const data = await res.json();\r\n      setMsg(data.message);\r\n      setMsgClass(data.success ? \"text-success\" : \"text-danger\");\r\n\r\n      if (data.success) {\r\n        setTimeout(() => {\r\n          setEmail(\"\");\r\n          setNewPassword(\"\");\r\n          onLogin(); // redirect to login\r\n        }, 1500);\r\n      }\r\n    } catch (err) {\r\n      setMsg(\"Server error\");\r\n      setMsgClass(\"text-danger\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleReset}>\r\n      <h3 className=\"text-center mb-3\">Reset Password</h3>\r\n      <input\r\n        className=\"form-control mb-2\"\r\n        type=\"email\"\r\n        placeholder=\"Enter registered email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        className=\"form-control mb-3\"\r\n        type=\"password\"\r\n        placeholder=\"New password\"\r\n        value={newPassword}\r\n        onChange={e => setNewPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button className=\"btn btn-warning w-100\">Reset Password</button>\r\n      {msg && <p className={`text-center mt-2 ${msgClass}`}>{msg}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}